% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oop.R
\name{register_class_ctor}
\alias{register_class_ctor}
\title{Register class constructor}
\usage{
register_class_ctor(cls, cls_name, parent = NULL, ...)
}
\arguments{
\item{cls}{Function. The class constructor.}

\item{cls_name}{Character. Class name of the class constructor.}

\item{parent}{Function. The parent class constructor.}

\item{...}{ignored.}
}
\value{
No return value, called for side effects.
}
\description{
This function save the class information in the \code{pseudo_oop_class} attribute
of the class constructor. The registration affects the functionality of
\code{\link[=is_subclass]{is_subclass()}} and \code{\link[=is_instance]{is_instance()}}.
}
\details{
This function needs to be called followed by the definition of the class
constructor.
}
\examples{

# Define a derived class constructor
MY_CLASS <- function(..., env = new.env(parent = parent.frame())) {

  # Declare inheritance
  env <- inherit(env, BASE, "MY_CLASS", ...)

  # Methods of this derived class
  myfunc_ <- function() 1 + 1

  # Register the method
  register_method(env, myfunc = myfunc_)

  # Return the instance environment
  return(env)
}

# Register the class constructor
register_class_ctor(MY_CLASS, "MY_CLASS", parent = BASE)

# Check the class information
attr(MY_CLASS, "pseudo_oop_class")
}
