% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oop.R
\name{register_method}
\alias{register_method}
\title{Register method for an instance}
\usage{
register_method(env, ..., container_name = "method_env_", self_name = "self")
}
\arguments{
\item{env}{Environment. Instance environment.}

\item{...}{Named Functions. Functions needs to be provided in named format,
like \code{a = function() 1}.}

\item{container_name}{Character. Name of the container. Methods will be
executed inside this container.}

\item{self_name}{Character. Name of the self reference. Methods needs to use
this name to access the instance environment.}
}
\value{
No return value, called for side effects.
}
\description{
This function register a function as a method of an instance environment.
}
\details{
Methods will be executed inside a container, which is a child
environment of the parent of the instance environment. Thus, methods can not
access variables of the instance environment directly, but can access
variables of the parent of the instance environment directly. The designed
way for methods to access the instance environment is by using the name
"self", this name can be changed by specifying a string in \code{self_name}.
The default name of the container is "method_env_". This also can be changed
by specifying a string in \code{container_name}.
\cr
\cr
Method needs to be provided as \code{a = function() 1}, where \code{a} is the name of
the method and the right hand side of the equal sign is the function.
Warning will be raised if the container contains contents other than the
self reference.
}
\examples{

a <- function() print(self$x)

e <- new.env()
e$x <- 1
register_method(e, aa = a, self_name = "self")

e$aa()

}
