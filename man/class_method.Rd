% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oop.R
\name{class_method}
\alias{class_method}
\title{Get the class method}
\usage{
class_method(env, cls, method_name, ..., container_name = "..method_env..")
}
\arguments{
\item{env}{Environment. The object environment.}

\item{cls}{Function. The class constructor.}

\item{method_name}{Character. The method name.}

\item{...}{Arguments passed to the class constructor.}

\item{container_name}{Character. Container name of the object environment.}
}
\value{
The class method.
}
\description{
This function construct an instance by using the provided class constructor,
then get the method from the instance and set its evaluation environment to
the container of the provided object environment.
}
\details{
If the body of the method depends on the arguments passed to the class
constructor, those values needs to be provided in \code{...}.
}
\examples{

# Define a derived class constructor
MY_CLASS <- function(..., env = new.env(parent = parent.frame())) {

  # Declare inheritance
  env <- inherit(env, BASE, "MY_CLASS", ...)

  # Methods of this derived class
  string_ <- function() "(MY_CLASS object)"

  # Register the method
  register_method(env, string = string_)

  # Return the instance environment
  return(env)
}

# Register the class constructor
register_class_ctor(MY_CLASS, "MY_CLASS", parent = BASE)

# Init an instance
my_instance <- MY_CLASS()

my_instance$string()

# Get the `string()` method from `BASE` class
BASE_string <- class_method(my_instance, BASE, "string")

BASE_string

BASE_string()

}
