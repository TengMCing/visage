% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zzz_VI_MODEL.R
\name{VI_MODEL$..init..}
\alias{VI_MODEL$..init..}
\title{Initialization method}
\arguments{
\item{prm}{Named List. A list of random variables or closed form expressions that
needs to be used while constructing \code{y}. Constant parameters could also be
supplied.}

\item{prm_type}{Named List. A list of characters denoting the type of the
parameters. "r" stands for random variable or closed form used in the
expression of \code{y}, "o" stands for others. This value only affects the
string representation of the object.}

\item{formula}{Formula. This will be passed to \code{CLOSED_FORM$instantiate} to
define a closed form expression for \code{y}. Default is \code{formula = self$formula}.}

\item{null_formula}{Formula. Formula for fitting the null model. Default is
\code{NULL}.}

\item{alt_formula}{Formula. Formula for fitting the alternative model.
Default is \code{NULL}.}
}
\value{
No return value, called for side effects.
}
\description{
This function will be called after an instance is built. User
input will be stored in the environment. The response variable of this model
is \code{y}.
}
\examples{

# Instantiate
x <- bandicoot::rand_uniform()
e <- bandicoot::rand_normal()
test <- vi_model(prm = list(x = x, e = e),
                 prm_type = list(x = "r", e = "r"),
                 formula = y ~ 1 + x + x^2 + e,
                 null_formula = y ~ x,
                 alt_formula = y ~ x + I(x^2))

test
}
