% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oop.R
\name{is_subclass}
\alias{is_subclass}
\title{Check whether a class is a subclass of another class}
\usage{
is_subclass(child_cls, parent_cls)
}
\arguments{
\item{child_cls}{Function. Child class constructor.}

\item{parent_cls}{Function. Parent class constructor.}
}
\value{
\code{TRUE} or \code{FALSE}.
}
\description{
This function returns \code{TRUE} if the class is a subclass of another class by
checking the attribute "pseduo_oop_class" of the class constructors.
}
\details{
This function only works if both class constructors are registered.
}
\examples{

# Define a derived class constructor
myclass <- function(..., env = new.env(parent = parent.frame())) {
  env <- inherit(env, BASE, "myclass", ...)

  myfunc_ <- function() 1 + 1

  register_method(env, myfunc = myfunc_)
  return(env)
}

register_class_ctor(myclass, "myclass", parent = BASE)

is_subclass(myclass, BASE)

}
\seealso{
\code{\link[=register_class_ctor]{register_class_ctor()}}
}
